type Query {
  sites: [Site]!
  site(name: String!): Site!
  users: [User]!
  regions: [Region]!
  region(osmId: String, statName: String): Region
}

type Mutation {
  newSite(site: SiteInput!): Site!
  newUser(site: UserInput!): User!
  login(email: String!, password: String!): AuthPayload
  newRegion(region: RegionInput!): Region!
}

type Site {
  name: String!
  latlng: [Float!]!
}

input SiteInput {
  name: String!
  latlng: [Float!]!
}

type User {
  email: String!
  hash: String!
}

input UserInput {
  email: String!
  password: String!
  confirmation: String!
}

type AuthPayload {
  token: String
  user: User
}

type Region {
  osmId: String!
  statName: String!
}

input RegionInput {
  osmId: String!
  statName: String!
}
