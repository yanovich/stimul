<!DOCTYPE html>
<html>
<head>
  <title>Test1</title>

  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.5.1/dist/leaflet.css"
    integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
    crossorigin=""/>
  <script src="https://unpkg.com/leaflet@1.5.1/dist/leaflet.js"
    integrity="sha512-GffPMF3RvMeYyc1LWMHtK8EbPv0iNZ8/oTtHPx9/cc2ILxQ+u905qIwdpULaqDkyBKgOaB57QTMg7ztg8Jm2Og=="
    crossorigin=""></script>
  <script src="https://unpkg.com/osme"></script>
  <script>var regionProm = osme.geoJSON("RU",{lang: 'ru'});</script>
  <script src="base/indicators.js"></script>
  <script src="base/regions.js"></script>
  <script src="base/sites.js"></script>
  <script src="base/values.js"></script>
  <script src="base/makestat.js"></script>
</head>

<body>
  <a href="./">Главная</a>
  <div id="mapid" style="width: 1000px; height: 600px;"></div>
<!-- Make sure you put this AFTER Leaflet's CSS -->
  <script>
    var mymap = L.map('mapid').setView([65, 103], 2);
    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
      maxZoom: 18,
      attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
        '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
        'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
      id: 'mapbox.streets'
    }).addTo(mymap);
    var regLeaf;
    var viewLevel=4;
    var data=corr_deaths7D_say;
    function regStyle(feature) {
      let style = { color:'#F05', fillColor: '#F05', opacity: 0, fillOpacity: 0};
      let d = data[feature.properties.osmId];
      if(d) {
        style.fillColor="#"+((d*128+128)|0).toString(16)+((-d*128+128)|0).toString(16)+"00";
        style.color=style.fillColor;
        style.opacity=0.6;
        style.fillOpacity=0.6;
      }
      return style;
    }
    var myLayer = L.geoJSON(null, {
      style: regStyle,
      filter: function(feature, layer) {
        return feature.properties.level == viewLevel;
      }
    }).addTo(mymap);
//    osme.geoJSON("RU",{lang: 'ru'}, regions=>{
      regionProm.then(regions=>{
      regLeaf = osme.toLeaflet(regions);
      myLayer.addData(regLeaf.geoJSON);
    });
    function changeView(v)
    {
      data=v;
      myLayer.setStyle(regStyle);
    }

	var popup = L.popup();

	function onMapClick(e) {
		popup
			.setLatLng(e.latlng)
			.setContent("You clicked the map at " + e.latlng.toString())
			.openOn(mymap);
	}

	mymap.on('click', onMapClick);
 </script>
 <button onclick="changeView(corr_deaths7D_say)">7 дней<button>
 <button onclick="changeView(corr_deaths1Y_say)">1 год<button>
 <button onclick="changeView(corr_perinatal_say)">Перинатальные<button>
 <button onclick="changeView(corr_deadborns_say)">Мертворожденные<button>
</body>
</html>